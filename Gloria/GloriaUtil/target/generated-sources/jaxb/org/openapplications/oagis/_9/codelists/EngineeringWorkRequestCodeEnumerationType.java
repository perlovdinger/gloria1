//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.09 at 04:05:32 em CEST 
//


package org.openapplications.oagis._9.codelists;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for EngineeringWorkRequestCodeEnumerationType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EngineeringWorkRequestCodeEnumerationType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}normalizedString">
 *     &lt;enumeration value="ChangeOfStandard"/>
 *     &lt;enumeration value="CostReduction"/>
 *     &lt;enumeration value="CustomerRejection"/>
 *     &lt;enumeration value="CustomerRequest"/>
 *     &lt;enumeration value="DurabilityImprovement"/>
 *     &lt;enumeration value="GovernmentRegulation"/>
 *     &lt;enumeration value="ProcurementAlignment"/>
 *     &lt;enumeration value="ProductionAlignment"/>
 *     &lt;enumeration value="ProductionRelief"/>
 *     &lt;enumeration value="ProductionRequirement"/>
 *     &lt;enumeration value="QualityImprovement"/>
 *     &lt;enumeration value="SecuriyReason"/>
 *     &lt;enumeration value="Standardization"/>
 *     &lt;enumeration value="SupplierRequest"/>
 *     &lt;enumeration value="TechnicalImprovement"/>
 *     &lt;enumeration value="ToolImprovement"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum EngineeringWorkRequestCodeEnumerationType {

    @XmlEnumValue("ChangeOfStandard")
    CHANGE_OF_STANDARD("ChangeOfStandard"),
    @XmlEnumValue("CostReduction")
    COST_REDUCTION("CostReduction"),
    @XmlEnumValue("CustomerRejection")
    CUSTOMER_REJECTION("CustomerRejection"),
    @XmlEnumValue("CustomerRequest")
    CUSTOMER_REQUEST("CustomerRequest"),
    @XmlEnumValue("DurabilityImprovement")
    DURABILITY_IMPROVEMENT("DurabilityImprovement"),
    @XmlEnumValue("GovernmentRegulation")
    GOVERNMENT_REGULATION("GovernmentRegulation"),
    @XmlEnumValue("ProcurementAlignment")
    PROCUREMENT_ALIGNMENT("ProcurementAlignment"),
    @XmlEnumValue("ProductionAlignment")
    PRODUCTION_ALIGNMENT("ProductionAlignment"),
    @XmlEnumValue("ProductionRelief")
    PRODUCTION_RELIEF("ProductionRelief"),
    @XmlEnumValue("ProductionRequirement")
    PRODUCTION_REQUIREMENT("ProductionRequirement"),
    @XmlEnumValue("QualityImprovement")
    QUALITY_IMPROVEMENT("QualityImprovement"),
    @XmlEnumValue("SecuriyReason")
    SECURIY_REASON("SecuriyReason"),
    @XmlEnumValue("Standardization")
    STANDARDIZATION("Standardization"),
    @XmlEnumValue("SupplierRequest")
    SUPPLIER_REQUEST("SupplierRequest"),
    @XmlEnumValue("TechnicalImprovement")
    TECHNICAL_IMPROVEMENT("TechnicalImprovement"),
    @XmlEnumValue("ToolImprovement")
    TOOL_IMPROVEMENT("ToolImprovement");
    private final String value;

    EngineeringWorkRequestCodeEnumerationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EngineeringWorkRequestCodeEnumerationType fromValue(String v) {
        for (EngineeringWorkRequestCodeEnumerationType c: EngineeringWorkRequestCodeEnumerationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
